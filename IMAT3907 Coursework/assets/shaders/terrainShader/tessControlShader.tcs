#version 450 core
// Outputting three CP per patch
layout (vertices = 3) out;

// Receiving vertex data from the vertex shader
in VS_OUT {
	vec2 TexCoords;
	flat int TexUnit;
	vec4 Tint;
	vec3 FragPos;
} tcs_in[];

// Output unedited vertex data to the TES
out TCS_OUT {
	vec2 TexCoords;
	flat int TexUnit;
	vec4 Tint;
	vec3 FragPos;
} tcs_out[];

void main()
{
	int tessLevel = 3;

	// gl_InvocationID is a number of the index of the vertex in the output patch
	// because the values below only need to be set once per patch, this if statement makes sure we don't
	// do any unneeded processing
	if (gl_InvocationID==0)
	{
		// Calculate the tessellation levels
        gl_TessLevelOuter[0] = tessLevel;
        gl_TessLevelOuter[1] = tessLevel; 
        gl_TessLevelOuter[2] = tessLevel;
		gl_TessLevelInner[0] = tessLevel; 
	}

	// Pass along the vertex data
	tcs_out[gl_InvocationID].FragPos = tcs_in[gl_InvocationID].FragPos;
	tcs_out[gl_InvocationID].TexCoords  = tcs_in[gl_InvocationID].TexCoords;
	tcs_out[gl_InvocationID].Tint  = tcs_in[gl_InvocationID].Tint;
	tcs_out[gl_InvocationID].TexUnit  = tcs_in[gl_InvocationID].TexUnit;
}